cmake_minimum_required(VERSION 3.10)
project(cpp_parser)
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if(NOT CMAKE_BUILD_TYPE AND NOT ENABLE_TSAN)
  set(CMAKE_BUILD_TYPE RelWithDebInfo)
endif()

set(CMAKE_CXX_FLAGS "-Wall -Wextra")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
# set(CMAKE_INCLUDE_CURRENT_DIR ON)
# set(Boost_USE_STATIC_LIBS ON)
set(ABSL_PROPAGATE_CXX_STD ON)

option(ENABLE_TSAN "Enable ThreadSanitizer" OFF)

if(ENABLE_TSAN)
    # if(NOT CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    #     message(FATAL_ERROR "ThreadSanitizer requires Clang (not GCC or MSVC)")
    # endif()

    # Add TSan compile and link flags
    add_compile_options(-fsanitize=thread -g -O1)
    link_libraries(-fsanitize=thread)

    # Disable inlining for better TSan reports (optional)
    add_compile_options(-fno-inline)

    message(STATUS "ThreadSanitizer (TSAN) enabled")
endif()

find_package(Boost REQUIRED iostreams)
add_subdirectory(thirdparty/abseil-cpp)
add_subdirectory(thirdparty/re2)
add_subdirectory(thirdparty/argparse)
add_subdirectory(thirdparty/yaml-cpp)
add_subdirectory(thirdparty/fmt)
add_subdirectory(thirdparty/json)
add_subdirectory(thirdparty/csv-parser)
file(GLOB_RECURSE sources ${PROJECT_SOURCE_DIR}/src/*.cpp)
include_directories(${PROJECT_SOURCE_DIR}/src)

add_executable(slack_tool ${sources})
# target_link_libraries(slack_tool -static-libgcc -static-libstdc++)
target_link_libraries(slack_tool Boost::iostreams)
target_link_libraries(slack_tool re2::re2)
target_link_libraries(slack_tool argparse)
target_link_libraries(slack_tool yaml-cpp::yaml-cpp)
target_link_libraries(slack_tool fmt::fmt)
target_link_libraries(slack_tool nlohmann_json::nlohmann_json)
target_link_libraries(slack_tool csv)
target_link_libraries(slack_tool gcov)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    message(STATUS "Configuring for Debug build")
    set_target_properties(slack_tool PROPERTIES OUTPUT_NAME "slack_tool-debug")
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    message(STATUS "Configuring for Release build")
    set_target_properties(slack_tool PROPERTIES OUTPUT_NAME "slack_tool")
endif()
